1	简答题
1.1 简答题一
聊聊什么是面向对象？ 以及我们为什么要学习面向对象 ?


答：面向对象是一种以对象为中心的编程思想，通过指挥对象实现具体的功能。
增加代码的复用性。

1.2 简答题二
聊聊什么是类 ? 什么是对象, 以及类和对象的关系

答：类是对现实事物的一种描述。
对象即为客观存在的事物。

类可以对对象进行描述解释



1.3 简答题三
类的组成部分是 ? 代码中分别用什么进行表示 ?

答：属性：成员变量来定义
行为：成员方法来体现





1.4 简答题四
对象的创建格式是 ? 对象创建好之后, 调用对象中的成员格式是 ?


答：类名 对象名 = new 类名();
对象名.成员方法();



1.5 简答题五
成员变量和局部变量有哪些区别呢 ?


答：
* **类中位置不同：**成员变量（类中方法外）局部变量（方法内部或方法声明上）
* **内存中位置不同：**成员变量（堆内存）局部变量（栈内存）
* **生命周期不同：**成员变量（随着对象的存在而存在，随着对象的消失而消失）局部变量（随着方法的调用而存在，随着方法的调用完毕而消失）
* **初始化值不同：**成员变量（有默认初始化值）局部变量（没有默认初始化值，必须先定义，赋值才能使用）


1.6 简答题六

聊聊你对 this 关键字的理解, this可以解决什么样的问题 ?

答：his代表当前调用方法的引用，哪个对象调用的方法，this就代表哪一个对象。可以区分局部变量和成员变量。




1.7 简答题七
聊聊你对 private 关键字的理解, 以及可以解决什么样的问题 ?

答：private关键字可以修饰成员，使其私有化只可以在类中使用。

避免了用户直接调用成员变量，随意修改。


1.8 简答题八
请描述下封装思想, 再聊聊你在代码的哪些地方用到了封装 ?

答：将具有特定功能的代码封装到一个方法中，这是对代码的封装，提高了代码的复用性

将成员变量封装到类中，使用的时候可以创建无数个该类的对象，这是对数据的一种封装

将属性私有化封装到类中，不让外界直接访问操作，这是封装的一种体现，保障了数据的安全性

实体类，属性封装，方法封装。




1.9 简答题九
请回答构造方法是什么? 格式需要满足哪些要求 ?
答:
构造方法是创建类对象的方法。
*  方法名与类名相同，大小写也要一致
*  没有返回值类型，连void都没有
*  没有具体的返回值（不能由retrun带回结果数据）


1.10 简答题十
请回答构造方法会在什么时候执行, 能不能通过对象名调用?
答:

创建对象时执行。    不能。


1.11 简答题十一
如果一个类中没写构造方法, 还能创建对象吗?
答:
可以。当类未写构造器时程序默认带有无参构造器。



1.12 简答题十二
如果一个类中只有带参构造方法, 还能用空参构造创建对象吗 ? 请说明具体原因哦
答:

不能，当类中写有有参构造方法时，系统就不默认有无参构造器了需要自行添加。


1.13 简答题十三
聊聊你对 JavaBean 的理解, 标准的 JavaBean 需要满足哪些要求 ?
答:

私有化成员变量，创建的对象只能通过get()和set()方法调用，带有无参构造器和有参构造器。






